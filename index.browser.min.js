(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.throat=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";module.exports=function(PromiseArgument){var Promise;function throat(size,fn){var queue=[];function run(fn,self,args){if(size){size--;var result=new Promise(function(resolve){resolve(fn.apply(self,args))});result.then(release,release);return result}else{return new Promise(function(resolve){queue.push(new Delayed(resolve,fn,self,args))})}}function release(){size++;if(queue.length){var next=queue.shift();next.resolve(run(next.fn,next.self,next.args))}}if(typeof size==="function"&&typeof fn==="number"){var temp=fn;fn=size;size=temp}if(typeof fn==="function"){return function(){var args=[];for(var i=0;i<arguments.length;i++){args.push(arguments[i])}return run(fn,this,args)}}else{return function(fn){var args=[];for(var i=1;i<arguments.length;i++){args.push(arguments[i])}return run(fn,this,args)}}}if(typeof arguments[0]==="number"||typeof arguments[1]==="number"){Promise=module.exports.Promise;if(typeof Promise!=="function"){throw new Error("You must provide a Promise polyfill for this library to work in older environments")}return throat(arguments[0],arguments[1])}else{Promise=PromiseArgument;return throat}};if(typeof Promise==="function"){module.exports.Promise=Promise}function Delayed(resolve,fn,self,args){this.resolve=resolve;this.fn=fn;this.self=self||null;this.args=args}},{}]},{},[1])(1)});
